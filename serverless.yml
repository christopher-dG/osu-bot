service: osu-bot
plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    layer: true
provider:
  name: aws
  runtime: python3.7
  timeout: 900
  environment:
    DYNAMODB_TABLE: !Ref table
    LAMBDA_PREFIX: ${self:service}-${self:provider.stage}-
    OSU_API_KEY: ${env:OSU_API_KEY}
    OSUSEARCH_API_KEY: ${env:OSUSEARCH_API_KEY}
    REDDIT_CLIENT_ID: ${env:REDDIT_CLIENT_ID}
    REDDIT_CLIENT_SECRET: ${env:REDDIT_CLIENT_SECRET}
    REDDIT_PASSWORD: ${env:REDDIT_PASSWORD}
    REDDIT_USERNAME: ${env:REDDIT_USERNAME}
    REDDIT_USER_AGENT: ${env:REDDIT_USER_AGENT}
    S3_BUCKET: ${env:S3_BUCKET}
    TILLERINO_API_KEY: ${env:TILLERINO_API_KEY}
    YOUTUBE_API_KEY: ${env:YOUTUBE_API_KEY}
  layers:
    - !Ref PythonRequirementsLambdaLayer
    - !Ref OppaiLambdaLayer
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: !GetAtt table.Arn
    - Effect: Allow
      Action: lambda:InvokeFunction
      Resource: !Join [':', ['arn', 'aws', 'lambda', '${self:provider.region}', !Ref 'AWS::AccountId', 'function', '${self:service}-${self:provider.stage}-*']]
    - Effect: Allow
      Action:
        - s3:GetItem
        - s3:PutItem
      Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET}
package:
  exclude:
    - ./**
  include:
    - ./osubot/**/*.py
layers:
  oppai:
    name: ${self:service}-${self:provider.stage}-oppai
    path: ./layers/oppai
    package:
      exclude:
        - ./**
      include:
        - ./bin/oppai
functions:
  comment:
    handler: osubot.handlers.comment.handler
  poll:
    handler: osubot.handlers.poll.handler
    timeout: 300
    # events:
    #   - schedule: rate(5 minutes)
  post:
    handler: osubot.handlers.post.handler
resources:
  Resources:
    table:
      Type: AWS::DynamoDB::Table
      Properties:
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
